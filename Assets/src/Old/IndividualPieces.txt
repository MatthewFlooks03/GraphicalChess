using UnityEngine;
using System;
using UnityEngine.Windows;

internal class Pawn : Piece, IPiece
{

    public Pawn(Vector2 position, char color)
    {
        this.position = position;
        string path = "Assets/sprites/p" + color + ".bytes";
        byte[] bytes = File.ReadAllBytes(path);
        Texture2D texture = new Texture2D(GraphicalBoard.boardScaleFactor, GraphicalBoard.boardScaleFactor);
        ImageConversion.LoadImage(texture, bytes);
        drawPiece(texture);

    }
}

internal class Rook : Piece, IPiece
{
    public Rook(Vector2 position, char color)
    {
        this.position = position;
        string path = "Assets/sprites/r" + color + ".bytes";
        byte[] bytes = File.ReadAllBytes(path);
        Texture2D texture = new Texture2D(GraphicalBoard.boardScaleFactor, GraphicalBoard.boardScaleFactor);
        ImageConversion.LoadImage(texture, bytes);
        drawPiece(texture);
    }
}

internal class Knight : Piece, IPiece
{
    public Knight(Vector2 position, char color)
    {
        this.position = position;
        string path = "Assets/sprites/n" + color + ".bytes";
        byte[] bytes = File.ReadAllBytes(path);
        Texture2D texture = new Texture2D(GraphicalBoard.boardScaleFactor, GraphicalBoard.boardScaleFactor);
        ImageConversion.LoadImage(texture, bytes);
        drawPiece(texture);
    }
}

internal class Bishop : Piece, IPiece
{
    public Bishop(Vector2 position, char color)
    {
        this.position = position;
        string path = "Assets/sprites/b" + color + ".bytes";
        byte[] bytes = File.ReadAllBytes(path);
        Texture2D texture = new Texture2D(GraphicalBoard.boardScaleFactor, GraphicalBoard.boardScaleFactor);
        ImageConversion.LoadImage(texture, bytes);
        drawPiece(texture);
    }
}

internal class King : Piece, IPiece
{
    public King(Vector2 position, char color)
    {
        this.position = position;
        string path = "Assets/sprites/k" + color + ".bytes";
        byte[] bytes = File.ReadAllBytes(path);
        Texture2D texture = new Texture2D(GraphicalBoard.boardScaleFactor, GraphicalBoard.boardScaleFactor);
        ImageConversion.LoadImage(texture, bytes);
        drawPiece(texture);
    }
}

internal class Queen : Piece, IPiece
{
    public Queen(Vector2 position, char color)
    {
        this.position = position;
        string path = "Assets/sprites/q" + color + ".bytes";
        byte[] bytes = File.ReadAllBytes(path);
        Texture2D texture = new Texture2D(GraphicalBoard.boardScaleFactor, GraphicalBoard.boardScaleFactor);
        ImageConversion.LoadImage(texture, bytes);
        drawPiece(texture);
    }
}
