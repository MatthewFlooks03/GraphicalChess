using System.IO;
using UnityEditor;
using UnityEngine;

internal class GraphicalBoard
{
    private static Color lightColor = new Color(1, 1, 1, 1);
    private static Color darkColor = new Color(255, 0, 0, 1);
    
    private static GameObject parent = new GameObject("Board");

    public static int boardScaleFactor = 32;

    public static void CreateBoard()
    {
        for (int file = 0; file < 8; file++)
        {
            for (int rank = 0; rank < 8; rank++)
            {
                bool isLight = (file + rank) % 2 != 0;

                Color squareColor = isLight ? lightColor : darkColor;

                var position = new Vector2(file, rank);

                DrawSquare(squareColor, position);
            }
        }
    }

    private static void DrawSquare(Color squareColor, Vector2 position)
    {
        //Generate
        GameObject quad = GameObject.CreatePrimitive(PrimitiveType.Quad);
        quad.transform.position = position * boardScaleFactor;
        quad.transform.localScale = new Vector2(boardScaleFactor, boardScaleFactor);
        quad.transform.parent = parent.transform;

        //Name
        char rank = (char)('a' + position.x);
        int file = (int)(position.y + 1);
        string quadName = rank.ToString() + file.ToString();
        quad.name = quadName;

        //Color
        Renderer quadRenderer = quad.GetComponent<Renderer>();
        quadRenderer.material.color = squareColor;
    }


}